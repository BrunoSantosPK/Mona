<!DOCTYPE html>
<html lang="pt-br">
    
    <head>
        <meta charset="utf-8">
        <link href="/public/styles.css" rel="stylesheet" >
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
        
        <title>Perfil de Jogador</title>
        <link rel="canonical" href="/">
        <meta name="description" content="Realize seu teste de perfil e descubra o seu arquétipo de jogador. É rápido e grátis!">
        <meta name="keywords" content="Gamificação, Explorador, Conquistador, Competitivo, Socializador, Perfil Comportamental">
    </head>

    <body>

        <div class="page">

            <div class="loading hide" id="loading">
                <div class="lds-ring"><div></div><div></div><div></div><div></div></div>
            </div>

            <div class="box" form-id="<%= idForm %>">

                <div class="box-card" id="card-1">
                    <p>Vamos começar o teste? Coisa rápida, cerca de 1 minuto. Clica em próxima e bora!</p>
                </div>

                <% combination.forEach((item, i) => { %>
                    <div class="box-card hide" id="card<%= i %>">
                        <p>O que mais te define como pessoa?</p>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" name="box-radio-<%= i %>" id="check-section-<%= i %>-<%= item.words[0].wordId %>">
                            <label class="form-check-label"><%= item.words[0].word %></label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" name="box-radio-<%= i %>" id="check-section-<%= i %>-<%= item.words[1].wordId %>">
                            <label class="form-check-label"><%= item.words[1].word %></label>
                        </div>
                    </div>
                <% }) %>

                <div class="box-card hide" id="card<%= combination.length %>"></div>

                <div class="next-button" onclick="next()" id="next-button">
                    Próximo
                </div>
                
            </div>
        </div>
    </body>

    <script>

        const state = {currentSection: -1, maxSection: 10, minSection: -1, selected: []};
        function getSections() {
            const sections = [];
            for(let i = state.minSection; i <= state.maxSection; i++) {
                sections.push({id: `card${i}`, number: i});
            }
            return sections;
        }

        function updateCheck(nextSection, executeRender) {
            const node = document.querySelector(`input[name="box-radio-${state.currentSection}"]:checked`);
            if(node == null) {
                alert("Opa, não avance antes de selecionar a melhor opção.");
            } else {
                const parts = node.id.split("-");
                const idWord = parseInt(parts[parts.length - 1]);
                state.selected.push(idWord);

                if(executeRender) renderCard(nextSection);
            }
        }

        function renderCard(nextSection) {
            getSections().forEach(section => {
                const node = document.getElementById(section.id);
                node.classList.add("hide");
                if(section.number == nextSection)
                    node.classList.remove("hide");
            });
            state.currentSection = nextSection;
        }

        function showLoading() {
            const node = document.getElementById("loading");
            node.classList.remove("hide");
        }

        function hideLoading() {
            const node = document.getElementById("loading");
            node.classList.add("hide");
        }

        async function calculate() {
            // Recupera dados do servidor
            const req = await fetch("/calc", {
                method: "POST",
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({words: state.selected})
            });
            const res = await req.json();

            // Atualiza a visão
            const node = document.getElementById(`card${state.maxSection}`);
            while(node.firstChild) {
                node.removeChild(node.firstChild);
            }

            res.data.description.split("\n").forEach(text => {
                let p = document.createElement("p");
                p.appendChild(document.createTextNode(text));
                node.appendChild(p);
            });
            
            hideLoading();
            document.getElementById("next-button").classList.add("hide");
        }

        async function next() {
            const nextSection = state.currentSection + 1;
            if(state.currentSection == state.minSection) {
                renderCard(nextSection);

            } else if(nextSection < state.maxSection - 1) {
                updateCheck(nextSection, true);

            } else if(nextSection == state.maxSection - 1) {
                document.getElementsByClassName("next-button")[0].innerHTML = "Calcular";
                updateCheck(nextSection, true);

            } else {
                console.log("Envia requisição de cálculo");
                updateCheck(nextSection, true);
                showLoading();
                await calculate();
            }
        }

    </script>

</html>